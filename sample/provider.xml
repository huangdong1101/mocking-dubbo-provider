<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://dubbo.apache.org/schema/dubbo
                           http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="mock-provider"/>

    <!-- 使用multicast广播注册中心暴露服务地址 -->
    <dubbo:registry address="multicast://224.0.0.0:2181"/>

    <!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="20880" threads="5000"/>

    <!-- 声明需要暴露的服务接口 -->
    <dubbo:service ref="paymentService" interface="com.mamba.mocking.dubbo.api.service.PaymentService" version="1.0"/>

    <!-- 和本地bean一样实现服务 -->
    <bean id="paymentService" class="com.mamba.mocking.dubbo.provider.MockServiceFactoryBean">
        <constructor-arg name="interfaceType" value="com.mamba.mocking.dubbo.api.service.PaymentService"/>
        <constructor-arg name="mockMethodMap">
            <map>
                <entry key="create(com.mamba.mocking.dubbo.api.dto.request.PaymentCreateRequest)">
                    <map>
                        <entry key="delay" value="50"/>
                        <entry key="return">
                            <value>
                                <![CDATA[
                                {"orderType":33,"orderId":"123","feeInfo":[{"fee":1,"name":"xxx"}],"totalFee":1,"timestamp":"2019-10-22 19:00:00"}
                                ]]>
                            </value>
                        </entry>
                    </map>
                </entry>
            </map>
        </constructor-arg>
        <constructor-arg name="defaultDelay" value="20"/>
    </bean>
</beans>